// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: pwm.proto

package pwm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages
type GetPWMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPWMRequest) Reset() {
	*x = GetPWMRequest{}
	mi := &file_pwm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPWMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPWMRequest) ProtoMessage() {}

func (x *GetPWMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPWMRequest.ProtoReflect.Descriptor instead.
func (*GetPWMRequest) Descriptor() ([]byte, []int) {
	return file_pwm_proto_rawDescGZIP(), []int{0}
}

type PWMEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       int32                  `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Microseconds  float64                `protobuf:"fixed64,2,opt,name=microseconds,proto3" json:"microseconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PWMEntry) Reset() {
	*x = PWMEntry{}
	mi := &file_pwm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PWMEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PWMEntry) ProtoMessage() {}

func (x *PWMEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pwm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PWMEntry.ProtoReflect.Descriptor instead.
func (*PWMEntry) Descriptor() ([]byte, []int) {
	return file_pwm_proto_rawDescGZIP(), []int{1}
}

func (x *PWMEntry) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *PWMEntry) GetMicroseconds() float64 {
	if x != nil {
		return x.Microseconds
	}
	return 0
}

type PWMValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*PWMEntry            `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PWMValues) Reset() {
	*x = PWMValues{}
	mi := &file_pwm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PWMValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PWMValues) ProtoMessage() {}

func (x *PWMValues) ProtoReflect() protoreflect.Message {
	mi := &file_pwm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PWMValues.ProtoReflect.Descriptor instead.
func (*PWMValues) Descriptor() ([]byte, []int) {
	return file_pwm_proto_rawDescGZIP(), []int{2}
}

func (x *PWMValues) GetValues() []*PWMEntry {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_pwm_proto protoreflect.FileDescriptor

const file_pwm_proto_rawDesc = "" +
	"\n" +
	"\tpwm.proto\x12\x03pwm\"\x0f\n" +
	"\rGetPWMRequest\"H\n" +
	"\bPWMEntry\x12\x18\n" +
	"\achannel\x18\x01 \x01(\x05R\achannel\x12\"\n" +
	"\fmicroseconds\x18\x02 \x01(\x01R\fmicroseconds\"2\n" +
	"\tPWMValues\x12%\n" +
	"\x06values\x18\x01 \x03(\v2\r.pwm.PWMEntryR\x06values2:\n" +
	"\n" +
	"PWMService\x12,\n" +
	"\x06GetPWM\x12\x12.pwm.GetPWMRequest\x1a\x0e.pwm.PWMValuesB\x17Z\x15zpicier/src/GO/pb;pwmb\x06proto3"

var (
	file_pwm_proto_rawDescOnce sync.Once
	file_pwm_proto_rawDescData []byte
)

func file_pwm_proto_rawDescGZIP() []byte {
	file_pwm_proto_rawDescOnce.Do(func() {
		file_pwm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pwm_proto_rawDesc), len(file_pwm_proto_rawDesc)))
	})
	return file_pwm_proto_rawDescData
}

var file_pwm_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pwm_proto_goTypes = []any{
	(*GetPWMRequest)(nil), // 0: pwm.GetPWMRequest
	(*PWMEntry)(nil),      // 1: pwm.PWMEntry
	(*PWMValues)(nil),     // 2: pwm.PWMValues
}
var file_pwm_proto_depIdxs = []int32{
	1, // 0: pwm.PWMValues.values:type_name -> pwm.PWMEntry
	0, // 1: pwm.PWMService.GetPWM:input_type -> pwm.GetPWMRequest
	2, // 2: pwm.PWMService.GetPWM:output_type -> pwm.PWMValues
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pwm_proto_init() }
func file_pwm_proto_init() {
	if File_pwm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pwm_proto_rawDesc), len(file_pwm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pwm_proto_goTypes,
		DependencyIndexes: file_pwm_proto_depIdxs,
		MessageInfos:      file_pwm_proto_msgTypes,
	}.Build()
	File_pwm_proto = out.File
	file_pwm_proto_goTypes = nil
	file_pwm_proto_depIdxs = nil
}
