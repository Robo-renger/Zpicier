// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: joy.proto

package joystick

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoystickRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Buttons       map[string]bool        `protobuf:"bytes,1,rep,name=buttons,proto3" json:"buttons,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Example: {"lights": true, "arm": false}
	AxisX         float64                `protobuf:"fixed64,2,opt,name=axis_x,json=axisX,proto3" json:"axis_x,omitempty"`
	AxisY         float64                `protobuf:"fixed64,3,opt,name=axis_y,json=axisY,proto3" json:"axis_y,omitempty"`
	Roll          float64                `protobuf:"fixed64,4,opt,name=roll,proto3" json:"roll,omitempty"`
	Pitch         float64                `protobuf:"fixed64,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw           float64                `protobuf:"fixed64,6,opt,name=yaw,proto3" json:"yaw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoystickRequest) Reset() {
	*x = JoystickRequest{}
	mi := &file_joy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoystickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoystickRequest) ProtoMessage() {}

func (x *JoystickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoystickRequest.ProtoReflect.Descriptor instead.
func (*JoystickRequest) Descriptor() ([]byte, []int) {
	return file_joy_proto_rawDescGZIP(), []int{0}
}

func (x *JoystickRequest) GetButtons() map[string]bool {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *JoystickRequest) GetAxisX() float64 {
	if x != nil {
		return x.AxisX
	}
	return 0
}

func (x *JoystickRequest) GetAxisY() float64 {
	if x != nil {
		return x.AxisY
	}
	return 0
}

func (x *JoystickRequest) GetRoll() float64 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *JoystickRequest) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *JoystickRequest) GetYaw() float64 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

type JoystickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "OK" or error message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoystickResponse) Reset() {
	*x = JoystickResponse{}
	mi := &file_joy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoystickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoystickResponse) ProtoMessage() {}

func (x *JoystickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoystickResponse.ProtoReflect.Descriptor instead.
func (*JoystickResponse) Descriptor() ([]byte, []int) {
	return file_joy_proto_rawDescGZIP(), []int{1}
}

func (x *JoystickResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_joy_proto protoreflect.FileDescriptor

const file_joy_proto_rawDesc = "" +
	"\n" +
	"\tjoy.proto\x12\bjoystick\"\xf9\x01\n" +
	"\x0fJoystickRequest\x12@\n" +
	"\abuttons\x18\x01 \x03(\v2&.joystick.JoystickRequest.ButtonsEntryR\abuttons\x12\x15\n" +
	"\x06axis_x\x18\x02 \x01(\x01R\x05axisX\x12\x15\n" +
	"\x06axis_y\x18\x03 \x01(\x01R\x05axisY\x12\x12\n" +
	"\x04roll\x18\x04 \x01(\x01R\x04roll\x12\x14\n" +
	"\x05pitch\x18\x05 \x01(\x01R\x05pitch\x12\x10\n" +
	"\x03yaw\x18\x06 \x01(\x01R\x03yaw\x1a:\n" +
	"\fButtonsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"*\n" +
	"\x10JoystickResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2W\n" +
	"\x0fJoystickService\x12D\n" +
	"\vUpdateState\x12\x19.joystick.JoystickRequest\x1a\x1a.joystick.JoystickResponseB%Z#zpicier/src/GO/pb/joystick;joystickb\x06proto3"

var (
	file_joy_proto_rawDescOnce sync.Once
	file_joy_proto_rawDescData []byte
)

func file_joy_proto_rawDescGZIP() []byte {
	file_joy_proto_rawDescOnce.Do(func() {
		file_joy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_joy_proto_rawDesc), len(file_joy_proto_rawDesc)))
	})
	return file_joy_proto_rawDescData
}

var file_joy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_joy_proto_goTypes = []any{
	(*JoystickRequest)(nil),  // 0: joystick.JoystickRequest
	(*JoystickResponse)(nil), // 1: joystick.JoystickResponse
	nil,                      // 2: joystick.JoystickRequest.ButtonsEntry
}
var file_joy_proto_depIdxs = []int32{
	2, // 0: joystick.JoystickRequest.buttons:type_name -> joystick.JoystickRequest.ButtonsEntry
	0, // 1: joystick.JoystickService.UpdateState:input_type -> joystick.JoystickRequest
	1, // 2: joystick.JoystickService.UpdateState:output_type -> joystick.JoystickResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_joy_proto_init() }
func file_joy_proto_init() {
	if File_joy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_joy_proto_rawDesc), len(file_joy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_joy_proto_goTypes,
		DependencyIndexes: file_joy_proto_depIdxs,
		MessageInfos:      file_joy_proto_msgTypes,
	}.Build()
	File_joy_proto = out.File
	file_joy_proto_goTypes = nil
	file_joy_proto_depIdxs = nil
}
